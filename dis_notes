;Script callback types, IE TR15 is OBJ_ATTACK
;enum ENTRYFUNC::{unnamed type#1}
;{
;    OBJ_INIT = 0x0,
;    OBJ_MAIN = 0x1,
;    UNIT_INIT = 0x2,
;    UNIT_MAIN = 0x3,
;    UNIT_FINALIZER = 0x4,
;    TEST = 0x5,
;    OBJ_DAMAGE = 0x6,
;    NEWGAME = 0x7,
;    PROGRESS_CALLBACK = 0x8,
;    GAMEOVER = 0x9,
;    SIGNAL_CALLBACK = 0xA,
;    REACTION_CALLBACK = 0xB,
;    SECOND_SET_CALLBACK = 0xC,
;    OBJ_FALL = 0xD,
;    OBJ_LAND = 0xE,
;    OBJ_ATTACK = 0xF,
;    OBJ_ANMATR_EFFECT = 0x10,
;    OBJ_ANMATR_CALLBACK = 0x11,
;    OBJ_CHANGE_ACT = 0x12,
;    OBJ_REFLECT = 0x13,
;    MAGIC_START = 0x14,
;    MAGIC_SHOT = 0x15,
;    LIMIT_START = 0x16,
;    LIMIT_CALL = 0x17,
;    LIMIT_ANMATR_EFFECT = 0x18,
;    LIMIT_ANMATR_CALLBACK = 0x19,
;    LIMIT_ATTACK = 0x1A,
;    OBJ_IK_ADJUST_CALLBACK = 0x1B,
;};









;Write arbitrary memory
;Writes the value of 1 to address 0032E748, PC version seems to have write access limitations. On PC you might not be able to write outside of the actor table with AI
 pushImm 3336008
 pushImm 1
 memcpy 0
 ret







;Call Information box in upper left corner
 pushImm 21625 ; String ID to call from a msg.bar file. Game assumes it is from the world one currently in RAM, or sys.bar. Pops up with a failsafe (FAKE) otherwise.
 syscall 4, 4 ; trap_mission_information (1 in, 0 out)
 ret









;Enable or disable AI based sturdy frames on an enemy, as well as other resistances. Resistance to magnet, etc.
 pushFromFSp 0 ; actor
 pushImm 1 ; pattern
 syscall 1, 212 ; trap_obj_pattern_disable (2 in, 0 out)
 ret

;PATTERN TYPES FOR THE ABOVE
;typdef enum {
;  REACTION_NULL = 0x0,
;  REACTION_HITBACK = 0x1,
;  REACTION_SPOT = 0x2,
;  REACTION_SMALL = 0x3,
;  REACTION_BLOW = 0x4,
;  REACTION_TORNADO = 0x5,
;  REACTION_F_SMALL = 0x6,
;  REACTION_F_BLOW = 0x7,
;  REACTION_S_SMALL = 0x8,
;  REACTION_S_BLOW = 0x9,
;  REACTION_X_SMALL = 0xa,
;  REACTION_X_BLOW = 0xb,
;  REACTION_HALF_HITBACK = 0xc,
;  REACTION_HALF_SMALL = 0xd,
;  REACTION_LARGE = 0xe,
;  REACTION_P_BLOW = 0xf,
;  REACTION_P_SMALL = 0x10,
;  REACTION_PS_BLOW = 0x11,
;  REACTION_PS_SMALL = 0x12,
;  REACTION_MAX = 0x13,
;  REACTION_IGNORE = 0xff,
;} _ZN2YS6DAMAGEUt0_E; // YS::DAMAGE::{unnamed type 1}










;Set resistances
 pushFromFSp 0 ; actor
 syscall 1, 84 ; trap_obj_sheet (1 in, 1 out)
 pushImm 6 ; element, 6 is all
 pushImm 100 ; percentage damage taken
 syscall 1, 311 ; trap_sheet_set_element_rate (3 in, 0 out)
 ret

;0 = Physical
;1 = Fire
;2 = Blizzard
;3 = Thunder
;4 = Darkness
;5 = Light
;6 = All











;Play voice clip
 pushFromFSp 0 ; actor
 pushImm 9 ; voice clip to play
 pushImm 3 ; priority
 syscall 1, 262 ; trap_obj_voice (3 in, 0 out)
 ret 








;Check if actor is hitting something with an attack
TR15:
 syscall 1, 3 ; trap_sysobj_player (0 in, 1 out)
 syscall 6, 10 ; trap_obj_is_hit_attack (1 in, 1 out)
 jz drop
 pushImm 1092616192
 syscall 0, 31 ; func_screen_whiteout (1 in, 0 out)
 pushImm 1090519040
 syscall 0, 32 ; func_screen_whitein (1 in, 0 out)
 ret 
drop:
 drop 
 ret








;Check if hitbox 126 hits target
TR15:
 popToSp 0 ;attack ID
 popToSp 4 ; unk maybe actor?
 pushFromFSp 0
 syscall 2, 25 ; trap_attack_get_param_id (1 in, 1 out)
 pushImm 126 ; hitbox to compare
 sub 
 eqz 
 jz drop
 pushFromFSp 0
 syscall 2, 14 ; trap_attack_is_hit (1 in, 1 out)
 jz drop
 pushImm 1092616192
 syscall 0, 31 ; func_screen_whiteout (1 in, 0 out)
 pushImm 1090519040
 syscall 0, 32 ; func_screen_whitein (1 in, 0 out)
 ret 
drop:
 drop 
 ret











;darken screen
 pushImm 0 ; light index?
 syscall 1, 181 ; trap_light_create (1 in, 1 out)
 popToWp light ;store light
 pushFromFWp light
 pushImm 1
 syscall 1, 182 ; trap_light_set_flag (2 in, 0 out)
 pushFromFWp light
 pushImm 80 ; R
 pushImm 80 ; G
 pushImm 80 ; B
 pushImm 1114636288 ;frame time to darken
 syscall 1, 183 ; trap_light_set_color (5 in, 0 out)
 ret

;end darken screen
 pushFromFWp light ;light to kill
 pushImm 1106247680 ; frame time to fade out
 syscall 1, 184 ; trap_light_fadeout (2 in, 0 out)
 ret










;START THREAD
;This thread will flash the screen white after a 200 frame countdown ends
startThread:
 pushImm 0
 pushImm thread ; code
 pushImm 0
 pushFromFSp 0 ; owner? IE the actor that spawned the thread?
 syscall 0, 9 ; trap_thread_start (4 in, 1 out)
 ret

thread:
 pushImm 1128792064 ; 200 frames
 gosub 4, timer
 ret

timer:
 popToSp 0 ;pop 200 frames
LL673:
 pushFromFSp 0 ; push frame time
 pushImm 0 ; checking if it's less than 0
 subf 
 supzf 
 jnz LL692 ;end loop
 pushFromFSp 0
 syscall 0, 3 ; trap_frametime (0 in, 1 out)
 subf ;sub tracting frame time from old frame time
 popToSp 0 ; pop new frame time
 halt 
 jmp LL673
LL692:
 pushImm 1092616192
 syscall 0, 31 ; func_screen_whiteout (1 in, 0 out)
 pushImm 1090519040
 syscall 0, 32 ; func_screen_whitein (1 in, 0 out)
 ret 









;Teleport actor to the floor under the player
 pushFromFSp 0 ; actor
 syscall 1, 3 ; trap_sysobj_player (0 in, 1 out)
 syscall 1, 98 ; trap_obj_step_pos (1 in, 1 out) ;Step position means the position on the floor under an actor. IE, the X and Z position, but Y is dropped and replaced with the position of the first walkable mesh under the actor.
 syscall 1, 148 ; trap_obj_set_pos (2 in, 0 out)
 ret






;Random chance to do something, in this case, 80% chance to jump to "code"
 pushImmf 1.0 ;range
 syscall 0, 17 ; trap_random_getf (1 in, 1 out) ; this will return a value between 0 and range
 pushImmf 0.8 ;compare
 subf 
 infzf ; check if f<0
 jz code
 ret









;Check if player is in a specific form, final form in this case.
 syscall 6, 2 ; trap_player_get_form (0 in, 1 out)
 pushImm 5
 sub
 eqz
 jz drop
 pushImm 1092616192
 syscall 0, 31 ; func_screen_whiteout (1 in, 0 out)
 pushImm 1090519040
 syscall 0, 32 ; func_screen_whitein (1 in, 0 out)
 ret
drop:
 drop
 ret






;check if button is pressed, in this case square
 pushImm 9
 syscall 0, 80 ; trap_pad_is_button (1 in, 1 out)
 eqz
 jz return
 pushImm 1092616192
 syscall 0, 31 ; func_screen_whiteout (1 in, 0 out)
 pushImm 1090519040
 syscall 0, 32 ; func_screen_whitein (1 in, 0 out)
return:
 ret




;check if button is held, in this case square
 pushImm 9
 syscall 0, 81 ; trap_pad_is_trigger (1 in, 1 out)
 eqz
 jz return
 pushImm 1092616192
 syscall 0, 31 ; func_screen_whiteout (1 in, 0 out)
 pushImm 1090519040
 syscall 0, 32 ; func_screen_whitein (1 in, 0 out)
return:
 ret

;VALUES FOR THE ABOVE
;Start        =  1
;Circle       =  2
;
;Up           =  4
;Down         =  5
;Left         =  6
;Right        =  7
;X            =  8
;Square       =  9
;Triangle     =  10
;R1           =  11
;
;Select       =  22







;Play animations in an order, in this case, slot 47 > 201 > 0. 
L3216:
 popToSp 0
 pushFromFSp 0
 pushImm 47 ; anim 1
 pushImm 2
 gosub 4, L3263
 pushFromFSp 0
 pushImm 201 ; anim 2
 pushImm 1
 gosub 4, L3263
 pushFromFSp 0
 fetchValue 4
 pushImm 0 ; anim 3
 pushImm 1090519040
 syscall 1, 12 ; trap_sysobj_motion_change (3 in, 0 out)
L3250:
 pushFromFSp 0
 fetchValue 4
 syscall 1, 14 ; trap_sysobj_motion_is_end (1 in, 1 out)
 eqz 
 jnz L3262
 halt 
 jmp L3250
L3262:
 ret 

L3263:
 popToSp 4
 popToSp 8
 popToSp 0
 pushFromFSp 0
 fetchValue 4
 pushFromFSp 8
 pushImm 1090519040
 syscall 1, 12 ; trap_sysobj_motion_change (3 in, 0 out)
L3280:
 pushFromFSp 0
 fetchValue 4
 syscall 1, 14 ; trap_sysobj_motion_is_end (1 in, 1 out)
 eqz 
 jnz LL3262
 halt 
 jmp L3280
LL3262:
 ret 